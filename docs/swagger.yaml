definitions:
  models.GeneralResp:
    properties:
      msg:
        type: string
    type: object
  models.PaginationResponse:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  models.Product:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.ProductResp:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      msg:
        type: string
      pagination:
        $ref: '#/definitions/models.PaginationResponse'
    type: object
  models.ProductSingleResp:
    properties:
      data:
        $ref: '#/definitions/models.Product'
      msg:
        type: string
    type: object
  models.User:
    properties:
      age:
        type: integer
      id:
        type: string
      name:
        type: string
    type: object
  models.UserResp:
    properties:
      data:
        items:
          $ref: '#/definitions/models.User'
        type: array
      msg:
        type: string
      pagination:
        $ref: '#/definitions/models.PaginationResponse'
    type: object
  models.UserSingleResp:
    properties:
      data:
        $ref: '#/definitions/models.User'
      msg:
        type: string
    type: object
  requests.ProductRequest:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
  requests.UserRequest:
    properties:
      age:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /Product:
    get:
      consumes:
      - application/json
      description: Get all Product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductResp'
      summary: Get all Product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create an Product
      parameters:
      - description: The Product to create
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/requests.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.GeneralResp'
      summary: Create an Product
      tags:
      - Product
  /Product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an Product
      parameters:
      - description: ID of the Product
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GeneralResp'
      summary: Delete an Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get an Product by ID
      parameters:
      - description: ID of the Product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductSingleResp'
      summary: Get an Product by ID
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update an Product
      parameters:
      - description: ID of the Product
        in: path
        name: id
        required: true
        type: integer
      - description: The Product to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/requests.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GeneralResp'
      summary: Update an Product
      tags:
      - Product
  /User:
    get:
      consumes:
      - application/json
      description: Get all User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResp'
      summary: Get all User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create an User
      parameters:
      - description: The User to create
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/requests.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.GeneralResp'
      summary: Create an User
      tags:
      - User
  /User/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an User
      parameters:
      - description: ID of the User
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GeneralResp'
      summary: Delete an User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get an User by ID
      parameters:
      - description: ID of the User
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserSingleResp'
      summary: Get an User by ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update an User
      parameters:
      - description: ID of the User
        in: path
        name: id
        required: true
        type: integer
      - description: The User to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/requests.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GeneralResp'
      summary: Update an User
      tags:
      - User
swagger: "2.0"
